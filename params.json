{"body":"# DSCapture.framework\r\n\r\nThis framework enables you to easily implement screenshot functionality on your Mac OS X applications. It can capture whole screens, or a part of them, make them into NSData and NSImage. There are two ways to capture display.\r\n\r\n* Core Graphics: Using Quartz Display Services, screen data goes directly to memory. Fast, but no window selection mode.\r\n\r\n* System: Using Mac OS X's screencapture, screen data goes to temp folder (/var/folders) once and loads back to memory. Slow, but great window selection mode.\r\n\r\nWith the framework, you can choose which one to use. See how below.\r\n\r\n# Using the Framework\r\n\r\nPlease try to check out ScreenCaptureTest application.\r\n\r\nDownload the framework, add it to your project, and:\r\n\r\n\t#import <DSCapture/DSCapture.h> \r\n\r\nIf you don't know how, read [this][1].\r\n\r\nAt first, you need to make a callback method which has (DSCaptureData *) as a parameter, something like this:\r\n\r\n\t- (void)displayCaptureData: (DSCaptureData *) sender;\r\n\r\nDSCapture is a singleton class - using it is fairly easy. \r\nTo capture fullscreen, you should invoke:\r\n\r\n\t[[[DSCapture sharedCapture] full] captureWithTarget:self selector:@selector(displayCaptureData:) useCG:NO];\r\n\r\nthen it will call back the selector right after the capturing process.\r\n\r\nTo capture selection, you should invoke:\r\n\r\n\t[[[DSCapture sharedCapture] selection] captureWithTarget:self selector:@selector(displayCaptureData:) useCG:NO];\r\n\r\nthen it will popup an interface to select, and call back. If the user cancels it, no method will be called back.\r\n\r\nAt the callback method, you can:\r\n\r\n\tNSData *data = [sender dataAtIndex:0];\r\n\tNSImage *image = [sender imageAtIndex:0];\r\n\r\nto get data and image. Also you can call:\r\n\r\n\tNSUInteger count = [sender count];\r\n\r\nto get number of images of the sender. Normally, the number isn't bigger than 1 - except the user is using multiple displays.\r\n\r\n# License\r\n\r\nThis framework follows MIT License.\r\n\r\nCopyright (C) 2012 by Dongsung \"Don\" Kim kiding@me.com\r\n \r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n \r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n \r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n[1]: https://github.com/andymatuschak/Sparkle/wiki\r\n\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-34035197-1","name":"DSCapture.framework","tagline":"Screen Capture Framework for Mac OS X"}